{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/PieGraph.js\",\n    _s = $RefreshSig$();\n\nimport { Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { RadialChart } from \"react-vis\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\nexport default function PieChartCovid({\n  data\n}) {\n  _s();\n\n  // const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n  const COLORS = [\"#4099ff\", \"#00C49F\", \"#fc032d\"];\n  const RADIAN = Math.PI / 180;\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: \"end\",\n      dominantBaseline: \"central\",\n      children: `${(percent * 100).toFixed(0)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  const [processedData, setProcessedData] = useState(null);\n  useEffect(() => {\n    if (data) {\n      setProcessedData([{\n        name: \"Active\",\n        value: data[\"TotalConfirmed\"] - data[\"TotalRecovered\"]\n      }, {\n        name: \"Recovered\",\n        value: data[\"TotalRecovered\"]\n      }, {\n        name: \"Death\",\n        value: data[\"TotalDeaths\"]\n      }]);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pie waves-effect\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      style: {\n        margin: 'auto',\n        marginTop: \"2%\",\n        width: '90%'\n      },\n      children: processedData && /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        style: {\n          margin: \"auto\",\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          dataKey: \"value\",\n          nameKey: \"name\",\n          data: processedData,\n          cx: 170,\n          cy: 200,\n          outerRadius: 170,\n          innerRadius: 75,\n          fill: \"#8884d8\",\n          label: renderCustomizedLabel,\n          labelLine: true,\n          children: processedData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          iconSize: 10,\n          width: 120,\n          height: 140,\n          layout: \"vertical\",\n          verticalAlign: \"middle\",\n          wrapperStyle: {\n            top: 0,\n            left: 350,\n            lineHeight: \"24px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PieChartCovid, \"XUpq7l4RDJK2+3AZ1/cM3qhgogg=\");\n\n_c = PieChartCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChartCovid\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/PieGraph.js"],"names":["Paper","React","useEffect","useState","RadialChart","PieChart","Pie","Cell","Tooltip","Legend","PieChartCovid","data","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","processedData","setProcessedData","name","value","margin","marginTop","width","map","entry","length","top","left","lineHeight"],"mappings":"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","sourcesContent":["import { Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { RadialChart } from \"react-vis\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n\nexport default function PieChartCovid({ data }) {\n  // const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n  const COLORS = [\"#4099ff\", \"#00C49F\", \"#fc032d\"];\n  const RADIAN = Math.PI / 180;\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index,\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text x={x} y={y} fill=\"white\" textAnchor={\"end\"} dominantBaseline=\"central\" >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  const [processedData, setProcessedData] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      setProcessedData([\n        {\n          name: \"Active\",\n          value: data[\"TotalConfirmed\"] - data[\"TotalRecovered\"],\n        },\n        {\n          name: \"Recovered\",\n          value: data[\"TotalRecovered\"],\n        },\n        {\n          name: \"Death\",\n          value: data[\"TotalDeaths\"],\n        },\n      ]);\n    }\n  }, [data]);\n\n\n\n  return (\n    <div className=\"Pie waves-effect\"> \n      <Paper elevation={2}  style={{ margin:'auto',marginTop: \"2%\" , width:'90%'}} >\n        {processedData && (\n          <PieChart width={400} height={400} style={{ margin: \"auto\", marginTop:'30px' }}>\n            <Pie\n              dataKey=\"value\"\n              nameKey=\"name\"\n              data={processedData}\n              cx={170}\n              cy={200}\n              outerRadius={170}\n              innerRadius={75}\n              fill=\"#8884d8\"\n              label={renderCustomizedLabel}\n              labelLine={true}\n            >\n              {processedData.map((entry, index) => (\n                <Cell fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Legend\n              iconSize={10}\n              width={120}\n              height={140}\n              layout=\"vertical\"\n              verticalAlign=\"middle\"\n              wrapperStyle={{\n                top: 0,\n                left: 350,\n                lineHeight: \"24px\",\n              }}\n            />\n            <Tooltip />\n          </PieChart>\n        )}\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}