{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/BarChartCovid.js\",\n    _s = $RefreshSig$();\n\nimport { Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nexport default function BarChartCovid({\n  data\n}) {\n  _s();\n\n  const [processedData, setProcessedData] = useState(null);\n  useEffect(() => {\n    if (Object.keys(data).length > 0) {\n      const keys = Object.keys(data[\"cases\"]).slice(Math.max(Object.keys(data[\"cases\"]).length - 7, 1)).sort((x, y) => {\n        const date_x = x.split(\"/\");\n        const date_y = y.split(\"/\");\n\n        if (date_x[2] > date_y[2]) {\n          return 1;\n        } else if (date_x[2] < date_y[2]) {\n          return -1;\n        } else {\n          if (date_x[1] > date_y[1]) {\n            return 1;\n          } else if (date_x[1] < date_y[1]) {\n            return -1;\n          } else {\n            if (date_x[0] > date_y[0]) {\n              return 1;\n            } else if (datea[0] < dateb[0]) {\n              return -1;\n            } else {\n              return 1;\n            }\n          }\n        }\n      });\n      const cases = Object.values(data[\"cases\"]).slice(Math.max(Object.values(data[\"cases\"]).length - 7, 1)).sort();\n      const deaths = Object.values(data[\"deaths\"]).slice(Math.max(Object.values(data[\"deaths\"]).length - 7, 1)).sort();\n      const recovered = Object.values(data[\"recovered\"]).slice(Math.max(Object.values(data[\"recovered\"]).length - 7, 1)).sort();\n      let newData = [];\n      let obj = {};\n\n      for (let index = 0; index < keys.length; index++) {\n        if (index === 0) {\n          obj = {\n            \"New Confirmed\": cases[index],\n            \"New Deaths\": deaths[index],\n            \"New Recovered\": recovered[index]\n          }; // newData.push(obj)\n        } else {\n          obj = {\n            name: keys[index],\n            \"New Confirmed\": cases[index] - cases[index - 1],\n            \"New Deaths\": deaths[index] - deaths[index - 1],\n            \"New Recovered\": recovered[index] - recovered[index - 1]\n          };\n          newData.push(obj);\n        }\n      } // const newData = data.map(mapper);\n\n\n      setProcessedData(newData);\n    }\n  }, [data]); // console.log(processedData);\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    style: {\n      margin: \"auto\",\n      marginTop: \"2%\",\n      width: \"90%\",\n      paddingTop: \"2%\",\n      paddingBottom: \"2%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      style: {\n        margin: \"auto\"\n      },\n      width: 700,\n      height: 400,\n      data: processedData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"New Confirmed\",\n        fill: \"#fcba03\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"New Deaths\",\n        fill: \"#fc032d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"New Recovered\",\n        fill: \"#13ed07\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BarChartCovid, \"XUpq7l4RDJK2+3AZ1/cM3qhgogg=\");\n\n_c = BarChartCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartCovid\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/BarChartCovid.js"],"names":["Paper","React","useEffect","useState","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","BarChartCovid","data","processedData","setProcessedData","Object","keys","length","slice","Math","max","sort","x","y","date_x","split","date_y","datea","dateb","cases","values","deaths","recovered","newData","obj","index","name","push","margin","marginTop","width","paddingTop","paddingBottom","top","right","left","bottom"],"mappings":"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","sourcesContent":["import { Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function BarChartCovid({ data }) {\n  const [processedData, setProcessedData] = useState(null);\n  \n  useEffect(() => {\n    if (Object.keys(data).length > 0) {\n\n      const keys = Object.keys(data[\"cases\"])\n        .slice(Math.max(Object.keys(data[\"cases\"]).length - 7, 1))\n        .sort((x, y) => {\n          const date_x = x.split(\"/\");\n          const date_y = y.split(\"/\");\n          if (date_x[2] > date_y[2]) {\n            return 1;\n          } else if (date_x[2] < date_y[2]) {\n            return -1;\n          } else {\n            if (date_x[1] > date_y[1]) {\n              return 1;\n            } else if (date_x[1] < date_y[1]) {\n              return -1;\n            } else {\n\n              if (date_x[0] > date_y[0]) {\n                return 1;\n              } else if (datea[0] < dateb[0]) {\n                return -1;\n              } else {\n                return 1;\n              }\n            }\n          }\n        });\n      const cases = Object.values(data[\"cases\"])\n        .slice(Math.max(Object.values(data[\"cases\"]).length - 7, 1))\n        .sort();\n      const deaths = Object.values(data[\"deaths\"])\n        .slice(Math.max(Object.values(data[\"deaths\"]).length - 7, 1))\n        .sort();\n      const recovered = Object.values(data[\"recovered\"])\n        .slice(Math.max(Object.values(data[\"recovered\"]).length - 7, 1))\n        .sort();\n      let newData = [];\n      let obj = {};\n      for (let index = 0; index < keys.length; index++) {\n        if (index === 0) {\n          obj = {\n            \"New Confirmed\": cases[index],\n            \"New Deaths\": deaths[index],\n            \"New Recovered\": recovered[index],\n          };\n          // newData.push(obj)\n        } else {\n          obj = {\n            name: keys[index],\n            \"New Confirmed\": cases[index] - cases[index - 1],\n            \"New Deaths\": deaths[index] - deaths[index - 1],\n            \"New Recovered\": recovered[index] - recovered[index - 1],\n          };\n          newData.push(obj);\n        }\n      }\n      // const newData = data.map(mapper);\n      setProcessedData(newData);\n    }\n  }, [data]);\n\n  // console.log(processedData);\n  return (\n    <Paper\n      elevation={2}\n      style={{\n        margin: \"auto\",\n        marginTop: \"2%\",\n        width: \"90%\",\n        paddingTop: \"2%\",\n        paddingBottom: \"2%\",\n      }}\n    >\n      <BarChart\n        style={{ margin: \"auto\" }}\n        width={700}\n        height={400}\n        data={processedData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"New Confirmed\" fill=\"#fcba03\" />\n        <Bar dataKey=\"New Deaths\" fill=\"#fc032d\" />\n        <Bar dataKey=\"New Recovered\" fill=\"#13ed07\" />\n      </BarChart>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}