{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\n// NPM Imports \nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\"; // Import the tables\n\nimport SummaryTable from \"../tables/SummaryTable\";\nimport CountryTable from \"../tables/CountryTable\"; //Import the graphs \n\nimport PieGraph from \"../graphs/PieGraph\";\nimport BarGraph from \"../graphs/BarGraph\";\nimport LineGraph from \"../graphs/LineGraph\"; //Import the Login Bar\n\nimport LoginNews from \"../components/LoginNews\"; //firebase Imports  \n\nimport { db } from \"../base\";\n\nfunction HomePage({\n  history\n}) {\n  _s();\n\n  const [summary, setSummary] = useState({});\n  const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  const [countryNews, setCountryNews] = useState([]); // Global News as a firebase collection \n\n  var latestNewsRef = db.collection(\"news\").doc(\"global\"); // Updating the news collection\n\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n      content: data,\n      date: date\n    }).then(() => {\n      console.log(\"DB updated\");\n    }).catch(error => {\n      console.log(\"error in updating DB\");\n    });\n  }; // Run UseEffect once to get the data through the api call\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const summaryUrl = \"https://api.covid19api.com/summary\";\n      const lastSevenDaysUrl = \"https://corona.lmao.ninja/v2/historical/all?lastdays=8\";\n      const lastThirtyDaysUrl = \"https://corona.lmao.ninja/v2/historical/all\";\n\n      try {\n        latestNewsRef.get().then(async doc => {\n          const today = parseInt(new Date().getTime() / 86400000);\n\n          if (doc.exists) {\n            const date = doc.data().date;\n\n            if (today > date) {\n              const resSummary = await axios.get(summaryUrl);\n              setSummary(resSummary.data);\n              updateDB(resSummary.data, today, \"global\");\n            } else {\n              console.log(\"cached from DB\");\n              setSummary(doc.data().content);\n            }\n          } else {\n            const resSummary = await axios.get(summaryUrl);\n            setSummary(resSummary.data);\n            updateDB(resSummary.data, today, \"global\");\n          }\n        });\n        const resSeven = await axios.get(lastSevenDaysUrl);\n        setLastSevenDays(resSeven.data);\n        const resThirty = await axios.get(lastThirtyDaysUrl);\n        setLastThirtyDays(resThirty.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []); // Handling user news\n\n  useEffect(() => {\n    db.collection(\"userNews\").where(\"country\", \"==\", \"worldwide\").get().then(function (querySnapshot) {\n      let newNews = [];\n      querySnapshot.forEach(function (doc) {\n        newNews.push(doc.data());\n      });\n      setCountryNews(newNews);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Worldwide Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LoginNews, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          height: \"250px\",\n          maxWidth: \"100%\",\n          overflow: \"scroll\",\n          margin: '1% 5%'\n        },\n        children: countryNews.length > 0 ? countryNews.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card align-items-left\",\n          style: {\n            margin: \"1% \",\n            maxWidth: '250px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: el.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: el.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-footer\",\n            children: el.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card text-center\",\n          style: {\n            margin: \"1% \",\n            maxWidth: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: \"No News Yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), Object.keys(summary).includes(\"Global\") && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SummaryTable, {\n          data: summary[\"Global\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PieGraph, {\n          data: summary[\"Global\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), lastSevenDays && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BarGraph, {\n          data: lastSevenDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          data: lastThirtyDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), Object.keys(summary).includes(\"Global\") &&\n      /*#__PURE__*/\n      // <Fragment>\n      _jsxDEV(CountryTable, {\n        data: summary[\"Countries\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }, this) // </Fragment>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this) // </div>\n  ;\n}\n\n_s(HomePage, \"SL3O2ZHNh8mcxkn1o3To8D2/15Q=\");\n\n_c = HomePage;\nHomePage.propTypes = {};\nexport default _c2 = withRouter(HomePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Home.js"],"names":["React","useState","useEffect","Fragment","withRouter","axios","SummaryTable","CountryTable","PieGraph","BarGraph","LineGraph","LoginNews","db","HomePage","history","summary","setSummary","lastSevenDays","setLastSevenDays","lastThirtyDays","setLastThirtyDays","countryNews","setCountryNews","latestNewsRef","collection","doc","updateDB","data","date","set","content","then","console","log","catch","error","fetchData","summaryUrl","lastSevenDaysUrl","lastThirtyDaysUrl","get","today","parseInt","Date","getTime","exists","resSummary","resSeven","resThirty","where","querySnapshot","newNews","forEach","push","display","flexDirection","height","maxWidth","overflow","margin","length","map","el","user","description","Object","keys","includes","propTypes"],"mappings":"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","sourcesContent":["// NPM Imports \nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Import the tables\nimport SummaryTable from \"../tables/SummaryTable\";\nimport CountryTable from \"../tables/CountryTable\";\n\n//Import the graphs \nimport PieGraph from \"../graphs/PieGraph\";\nimport BarGraph from \"../graphs/BarGraph\";\nimport LineGraph from \"../graphs/LineGraph\";\n\n//Import the Login Bar\nimport LoginNews from \"../components/LoginNews\";\n\n\n//firebase Imports  \nimport {db} from \"../base\"\n\n\nfunction HomePage({ history }) {\n\n  const [summary, setSummary] = useState({});\n  const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  const [countryNews, setCountryNews] = useState([]);\n  \n  // Global News as a firebase collection \n  var latestNewsRef = db.collection(\"news\").doc(\"global\");\n\n  // Updating the news collection\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n        content: data,\n        date: date,\n      }).then(() => {\n        console.log(\"DB updated\");\n      })\n      .catch((error) => {\n        console.log(\"error in updating DB\");\n      });\n  };  \n\n  // Run UseEffect once to get the data through the api call\n  useEffect( () => {\n\n    const fetchData = async () => {\n      const summaryUrl = \"https://api.covid19api.com/summary\" ;\n      const lastSevenDaysUrl = \"https://corona.lmao.ninja/v2/historical/all?lastdays=8\" ; \n      const lastThirtyDaysUrl = \"https://corona.lmao.ninja/v2/historical/all\" ; \n\n      try {\n        latestNewsRef.get().then(async (doc) => {\n          const today = parseInt(new Date().getTime() / 86400000);\n          if (doc.exists) {\n            const date = doc.data().date;\n            if (today > date) {\n              const resSummary = await axios.get(summaryUrl);\n              setSummary(resSummary.data);\n              updateDB(resSummary.data, today, \"global\");\n            } else {\n              console.log(\"cached from DB\");\n              setSummary(doc.data().content);\n            }\n          } \n          else {\n            const resSummary = await axios.get(summaryUrl);\n            setSummary(resSummary.data);\n            updateDB(resSummary.data, today, \"global\");\n          }\n        });\n\n        const resSeven = await axios.get(lastSevenDaysUrl);\n        setLastSevenDays(resSeven.data);\n        const resThirty = await axios.get(lastThirtyDaysUrl);\n        setLastThirtyDays(resThirty.data);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n\n    \n  }, []);\n\n  // Handling user news\n  useEffect(() => {\n    db.collection(\"userNews\")\n      .where(\"country\", \"==\", \"worldwide\")\n      .get()\n      .then(function (querySnapshot) {\n        let newNews = [];\n        querySnapshot.forEach(function (doc) {\n          newNews.push(doc.data());\n        });\n        setCountryNews(newNews);\n      })\n      .catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  }, []);\n\n  \n  return (\n    <div className=\"home\">\n      {/* <div class=\"container\"> */}\n      <h1>Worldwide Data</h1>\n      <Fragment>\n        {/* <div class=\"container\"> */}\n        <LoginNews />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            height: \"250px\",\n            maxWidth: \"100%\",\n            overflow: \"scroll\",\n            margin:'1% 5%'\n          }}\n        >     \n        {countryNews.length > 0 ? (\n          countryNews.map((el) => (\n            <div class=\"card align-items-left\" style={{ margin: \"1% \" ,maxWidth:'250px'}}>\n              <div class=\"card-header\">\n                {el.user}\n              </div>\n              <div class=\"card-body\">\n                {el.description}\n              </div>  \n                \n              <div class=\"card-footer\">\n                {el.date}\n              </div>  \n              {/* </div> */}\n            </div>\n          ))\n        ) : (\n          <div class=\"card text-center\" style={{ margin: \"1% \", maxWidth:'200px' }}>\n            <div class=\"card-body\">\n                No News Yet!\n            </div>  \n          </div>\n        )}\n        </div>\n          {Object.keys(summary).includes(\"Global\") && (\n            <Fragment>\n              <SummaryTable data={summary[\"Global\"]} />\n              <PieGraph data={summary[\"Global\"]} />\n            </Fragment>\n          )}\n          {lastSevenDays && (\n            <Fragment>\n              <BarGraph data={lastSevenDays} />\n              <LineGraph data={lastThirtyDays} />\n            </Fragment>\n          )}\n          {Object.keys(summary).includes(\"Global\") && (\n            // <Fragment>\n              <CountryTable data={summary[\"Countries\"]} />\n            // </Fragment>\n          )}\n        {/* </div> */}\n      </Fragment>\n      <br/>\n      <br/>\n      {/* </div> */}\n    </div>\n    // </div>\n  );\n}\n\nHomePage.propTypes = {};\n\nexport default withRouter(HomePage);\n"]},"metadata":{},"sourceType":"module"}