{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\n// General Imports \nimport React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppBar, Button, IconButton, Table, TableBody, TableCell, TableContainer, TableRow, Toolbar, Typography } from \"@material-ui/core\"; // Import the Custom Components\n\nimport Summary from \"../components/Summary\";\nimport PieChartCovid from \"../components/PieChartCovid\";\nimport BarChartCovid from \"../components/BarChartCovid\";\nimport LineChartCovid from \"../components/LineChartCovid\";\nimport CovidCountryTable from \"../components/CovidCountryTable\";\nimport firebase from \"firebase\"; //firebase Imports\n\nimport { app } from \"../base\";\nconst db = firebase.firestore();\n\nfunction HomePage({\n  history\n}) {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [covidSummary, setCovidSummary] = useState({});\n  const [covidWorld, setCovidWorld] = useState([]);\n  const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  var latestNewsRef = db.collection(\"news\").doc(\"global\");\n\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n      content: data,\n      date: date\n    }).then(() => {\n      console.log(\"DB updated\");\n    }).catch(error => {\n      console.log(\"error in updating DB\");\n    });\n  }; // Run UseEffect once to get the data through the api call\n\n\n  useEffect(async () => {\n    const summaryUrl = \"https://api.covid19api.com/summary\";\n    const lastSevenDaysUrl = \"https://corona.lmao.ninja/v2/historical/all?lastdays=8\";\n\n    try {\n      latestNewsRef.get().then(async doc => {\n        const today = parseInt(new Date().getTime() / 86400000);\n\n        if (doc.exists) {\n          const date = doc.data().date; // If the date is after the last update on firestore\n          // Update the database \n\n          if (today > date) {\n            const resSummary = await axios.get(summaryUrl);\n            setCovidSummary(resSummary.data);\n            updateDB(resSummary.data, today, \"global\");\n          } else {\n            console.log(\"cached from DB\");\n            setCovidSummary(doc.data().content);\n          }\n        } else {\n          const resSummary = await axios.get(summaryUrl);\n          setCovidSummary(resSummary.data);\n          updateDB(resSummary.data, today, \"global\");\n        }\n      });\n      const resSeven = await axios.get(lastSevenDaysUrl);\n      setLastSevenDays(resSeven.data);\n      const resThirty = await axios.get(\"https://corona.lmao.ninja/v2/historical/all\");\n      setLastThirtyDays(resThirty.data); // const resWorld = await axios.get(\"https://api.covid19api.com/world\");\n      // setCovidWorld(resWorld.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []); // Google Authentication\n\n  const auth = firebase.auth();\n  const [user, setuser] = useState(auth.currentUser);\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n\n  const signInWithGoogle = () => {\n    auth.signInWithPopup(googleProvider).then(res => {\n      var userRef = db.collection(\"users\").doc(res.user.email);\n      userRef.get().then(async doc => {\n        if (doc.exists) {\n          setuser(res.user);\n        } else {\n          auth.signOut(); // setuser(null);\n        }\n      });\n      console.log(res.user);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  useEffect(() => {\n    setuser(auth.currentUser);\n  }, [auth.currentUser]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            flexGrow: 1\n          },\n          children: [\"Welcome \", user ? user.displayName : \"To Our Website\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), !user && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: signInWithGoogle,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), user && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => {\n            auth.signOut().then(() => console.log('signed out'));\n            setuser(null);\n          },\n          children: \"Signout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), Object.keys(covidSummary).includes(\"Global\") && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Summary, {\n        data: covidSummary[\"Global\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PieChartCovid, {\n        data: covidSummary[\"Global\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), lastSevenDays && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BarChartCovid, {\n        data: lastSevenDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LineChartCovid, {\n        data: lastThirtyDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), Object.keys(covidSummary).includes(\"Global\") && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CovidCountryTable, {\n        data: covidSummary[\"Countries\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"iuIwRaqmVgt8CeQXQEvnqypiIwo=\");\n\n_c = HomePage;\nHomePage.propTypes = {};\nexport default _c2 = withRouter(HomePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/HomePage.js"],"names":["React","useState","useEffect","Fragment","PropTypes","Fab","Redirect","withRouter","axios","AppBar","Button","IconButton","Table","TableBody","TableCell","TableContainer","TableRow","Toolbar","Typography","Summary","PieChartCovid","BarChartCovid","LineChartCovid","CovidCountryTable","firebase","app","db","firestore","HomePage","history","loggedIn","setLoggedIn","covidSummary","setCovidSummary","covidWorld","setCovidWorld","lastSevenDays","setLastSevenDays","lastThirtyDays","setLastThirtyDays","latestNewsRef","collection","doc","updateDB","data","date","set","content","then","console","log","catch","error","summaryUrl","lastSevenDaysUrl","get","today","parseInt","Date","getTime","exists","resSummary","resSeven","resThirty","auth","user","setuser","currentUser","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","res","userRef","email","signOut","message","flexGrow","displayName","Object","keys","includes","propTypes"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuDC,SAAvD,EAAkEC,cAAlE,EAAkFC,QAAlF,EAA4FC,OAA5F,EAAqGC,UAArG,QAAsH,mBAAtH,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,SAAQC,GAAR,QAAkB,SAAlB;AAEA,MAAMC,EAAE,GAAGF,QAAQ,CAACG,SAAT,EAAX;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmC,aAAD,EAAgBC,gBAAhB,IAAoCpC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACqC,cAAD,EAAiBC,iBAAjB,IAAsCtC,QAAQ,CAAC,EAAD,CAApD;AAEA,MAAIuC,aAAa,GAAGd,EAAE,CAACe,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0B,QAA1B,CAApB;;AAEA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaH,GAAb,KAAqB;AACpChB,IAAAA,EAAE,CAACe,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BA,GAA1B,EAA+BI,GAA/B,CAAmC;AAC/BC,MAAAA,OAAO,EAAEH,IADsB;AAE/BC,MAAAA,IAAI,EAAEA;AAFyB,KAAnC,EAGKG,IAHL,CAGU,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KARH;AASD,GAVD,CAT6B,CAqB7B;;;AACAhD,EAAAA,SAAS,CAAC,YAAY;AAEpB,UAAMmD,UAAU,GAAG,oCAAnB;AACA,UAAMC,gBAAgB,GAAG,wDAAzB;;AAEA,QAAI;AACFd,MAAAA,aAAa,CAACe,GAAd,GAAoBP,IAApB,CAAyB,MAAON,GAAP,IAAe;AACtC,cAAMc,KAAK,GAAGC,QAAQ,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,QAAxB,CAAtB;;AACA,YAAIjB,GAAG,CAACkB,MAAR,EAAgB;AACd,gBAAMf,IAAI,GAAGH,GAAG,CAACE,IAAJ,GAAWC,IAAxB,CADc,CAEd;AACA;;AACA,cAAIW,KAAK,GAAGX,IAAZ,EAAkB;AAChB,kBAAMgB,UAAU,GAAG,MAAMrD,KAAK,CAAC+C,GAAN,CAAUF,UAAV,CAAzB;AACApB,YAAAA,eAAe,CAAC4B,UAAU,CAACjB,IAAZ,CAAf;AACAD,YAAAA,QAAQ,CAACkB,UAAU,CAACjB,IAAZ,EAAkBY,KAAlB,EAAyB,QAAzB,CAAR;AACD,WAJD,MAIO;AACLP,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAjB,YAAAA,eAAe,CAACS,GAAG,CAACE,IAAJ,GAAWG,OAAZ,CAAf;AACD;AACF,SAZD,MAaK;AACH,gBAAMc,UAAU,GAAG,MAAMrD,KAAK,CAAC+C,GAAN,CAAUF,UAAV,CAAzB;AACApB,UAAAA,eAAe,CAAC4B,UAAU,CAACjB,IAAZ,CAAf;AACAD,UAAAA,QAAQ,CAACkB,UAAU,CAACjB,IAAZ,EAAkBY,KAAlB,EAAyB,QAAzB,CAAR;AACD;AACF,OApBD;AAsBA,YAAMM,QAAQ,GAAG,MAAMtD,KAAK,CAAC+C,GAAN,CAAUD,gBAAV,CAAvB;AACAjB,MAAAA,gBAAgB,CAACyB,QAAQ,CAAClB,IAAV,CAAhB;AACA,YAAMmB,SAAS,GAAG,MAAMvD,KAAK,CAAC+C,GAAN,CACtB,6CADsB,CAAxB;AAGAhB,MAAAA,iBAAiB,CAACwB,SAAS,CAACnB,IAAX,CAAjB,CA5BE,CA8BF;AACA;AACD,KAhCD,CAgCE,OAAOQ,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAxCQ,EAwCN,EAxCM,CAAT,CAtB6B,CAgE7B;;AACA,QAAMY,IAAI,GAAGxC,QAAQ,CAACwC,IAAT,EAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjE,QAAQ,CAAC+D,IAAI,CAACG,WAAN,CAAhC;AACA,QAAMC,cAAc,GAAG,IAAI5C,QAAQ,CAACwC,IAAT,CAAcK,kBAAlB,EAAvB;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,IAAI,CACDO,eADH,CACmBH,cADnB,EAEGpB,IAFH,CAESwB,GAAD,IAAS;AACb,UAAIC,OAAO,GAAG/C,EAAE,CAACe,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B8B,GAAG,CAACP,IAAJ,CAASS,KAApC,CAAd;AACAD,MAAAA,OAAO,CAAClB,GAAR,GAAcP,IAAd,CAAmB,MAAON,GAAP,IAAe;AAChC,YAAIA,GAAG,CAACkB,MAAR,EAAgB;AACdM,UAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACD,SAFD,MAEO;AACLD,UAAAA,IAAI,CAACW,OAAL,GADK,CAEL;AACD;AACF,OAPD;AAQA1B,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAG,CAACP,IAAhB;AACD,KAbH,EAcGd,KAdH,CAcUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACwB,OAAlB;AACD,KAhBH;AAiBD,GAlBD;;AAmBA1E,EAAAA,SAAS,CAAC,MAAM;AACdgE,IAAAA,OAAO,CAACF,IAAI,CAACG,WAAN,CAAP;AACD,GAFQ,EAEN,CAACH,IAAI,CAACG,WAAN,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAE;AAAEU,YAAAA,QAAQ,EAAE;AAAZ,WAAhC;AAAA,iCACWZ,IAAI,GAAGA,IAAI,CAACa,WAAR,GAAsB,gBADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIG,CAACb,IAAD,iBACC,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEK,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EASGL,IAAI,iBACH,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAE,MAAM;AACbD,YAAAA,IAAI,CAACW,OAAL,GAAe3B,IAAf,CAAoB,MAAIC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAxB;AACAgB,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAwBGa,MAAM,CAACC,IAAP,CAAYhD,YAAZ,EAA0BiD,QAA1B,CAAmC,QAAnC,kBACC,QAAC,QAAD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEjD,YAAY,CAAC,QAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEA,YAAY,CAAC,QAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,EA8BGI,aAAa,iBACZ,QAAC,QAAD;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ,EAoCGyC,MAAM,CAACC,IAAP,CAAYhD,YAAZ,EAA0BiD,QAA1B,CAAmC,QAAnC,kBACC,QAAC,QAAD;AAAA,6BACE,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEjD,YAAY,CAAC,WAAD;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAvIQJ,Q;;KAAAA,Q;AAyITA,QAAQ,CAACsD,SAAT,GAAqB,EAArB;AAEA,qBAAe3E,UAAU,CAACqB,QAAD,CAAzB","sourcesContent":["// General Imports \nimport React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AppBar, Button, IconButton, Table, TableBody, TableCell, TableContainer, TableRow, Toolbar, Typography} from \"@material-ui/core\";\n\n// Import the Custom Components\nimport Summary from \"../components/Summary\";\nimport PieChartCovid from \"../components/PieChartCovid\";\nimport BarChartCovid from \"../components/BarChartCovid\";\nimport LineChartCovid from \"../components/LineChartCovid\";\nimport CovidCountryTable from \"../components/CovidCountryTable\";\nimport firebase from \"firebase\";\n\n//firebase Imports\nimport {app} from \"../base\"\n\nconst db = firebase.firestore();\n\nfunction HomePage({ history }) {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [covidSummary, setCovidSummary] = useState({});\n  const [covidWorld, setCovidWorld] = useState([]);\n  const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  \n  var latestNewsRef = db.collection(\"news\").doc(\"global\");\n\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n        content: data,\n        date: date,\n      }).then(() => {\n        console.log(\"DB updated\");\n      })\n      .catch((error) => {\n        console.log(\"error in updating DB\");\n      });\n  };\n\n  // Run UseEffect once to get the data through the api call\n  useEffect(async () => {\n\n    const summaryUrl = \"https://api.covid19api.com/summary\" ;\n    const lastSevenDaysUrl = \"https://corona.lmao.ninja/v2/historical/all?lastdays=8\" ; \n\n    try {\n      latestNewsRef.get().then(async (doc) => {\n        const today = parseInt(new Date().getTime() / 86400000);\n        if (doc.exists) {\n          const date = doc.data().date;\n          // If the date is after the last update on firestore\n          // Update the database \n          if (today > date) {\n            const resSummary = await axios.get(summaryUrl);\n            setCovidSummary(resSummary.data);\n            updateDB(resSummary.data, today, \"global\");\n          } else {\n            console.log(\"cached from DB\");\n            setCovidSummary(doc.data().content);\n          }\n        } \n        else {\n          const resSummary = await axios.get(summaryUrl);\n          setCovidSummary(resSummary.data);\n          updateDB(resSummary.data, today, \"global\");\n        }\n      });\n\n      const resSeven = await axios.get(lastSevenDaysUrl);\n      setLastSevenDays(resSeven.data);\n      const resThirty = await axios.get(\n        \"https://corona.lmao.ninja/v2/historical/all\"\n      );\n      setLastThirtyDays(resThirty.data);\n\n      // const resWorld = await axios.get(\"https://api.covid19api.com/world\");\n      // setCovidWorld(resWorld.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Google Authentication\n  const auth = firebase.auth();\n  const [user, setuser] = useState(auth.currentUser);\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  const signInWithGoogle = () => {\n    auth\n      .signInWithPopup(googleProvider)\n      .then((res) => {\n        var userRef = db.collection(\"users\").doc(res.user.email);\n        userRef.get().then(async (doc) => {\n          if (doc.exists) {\n            setuser(res.user);\n          } else {\n            auth.signOut();\n            // setuser(null);\n          }\n        });\n        console.log(res.user);\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n  useEffect(() => {\n    setuser(auth.currentUser)\n  }, [auth.currentUser])\n\n  return (\n    <Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Welcome {user ? user.displayName : \"To Our Website\"}\n          </Typography>\n          {!user && (\n            <Button color=\"inherit\" onClick={signInWithGoogle}>\n              Login\n            </Button>\n          )}\n          {user && (\n            <Button\n              color=\"inherit\"\n              onClick={() => {\n                auth.signOut().then(()=>console.log('signed out'));\n                setuser(null);\n              }}\n            >\n              Signout\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n      {Object.keys(covidSummary).includes(\"Global\") && (\n        <Fragment>\n          <Summary data={covidSummary[\"Global\"]} />\n          <PieChartCovid data={covidSummary[\"Global\"]} />\n        </Fragment>\n      )}\n      {lastSevenDays && (\n        <Fragment>\n          <BarChartCovid data={lastSevenDays} />\n          <LineChartCovid data={lastThirtyDays} />\n        </Fragment>\n      )}\n      {Object.keys(covidSummary).includes(\"Global\") && (\n        <Fragment>\n          <CovidCountryTable data={covidSummary[\"Countries\"]} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nHomePage.propTypes = {};\n\nexport default withRouter(HomePage);\n"]},"metadata":{},"sourceType":"module"}