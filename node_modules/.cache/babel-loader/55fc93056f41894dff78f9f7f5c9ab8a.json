{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/graphs/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport { Paper } from \"@material-ui/core\"; // import {Paper} from \"paper\"\n\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nexport default function LineGraph({\n  data\n}) {\n  _s();\n\n  const [processedData, setProcessedData] = useState(null);\n  useEffect(() => {\n    if (Object.keys(data).length > 0) {\n      const keys = Object.keys(data[\"cases\"]);\n      const cases = Object.values(data[\"cases\"]).sort();\n      const deaths = Object.values(data[\"deaths\"]).sort();\n      const recovered = Object.values(data[\"recovered\"]).sort();\n      let excerpt = [];\n      let excerpt_obj = {};\n\n      for (let i = 0; i < keys.length; i++) {\n        if (i === 0) {\n          excerpt_obj = {\n            \"Total Confirmed\": cases[i],\n            \"Total Deaths\": deaths[i],\n            \"Total Recovered\": recovered[i]\n          };\n        } else {\n          excerpt_obj = {\n            name: keys[i],\n            \"Total Confirmed\": cases[i],\n            \"Total Deaths\": deaths[i],\n            \"Total Recovered\": recovered[i]\n          };\n          excerpt.push(excerpt_obj);\n        }\n      } // const newData = data.map(mapper);\n\n\n      setProcessedData(excerpt);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    style: {\n      margin: \"auto\",\n      marginTop: \"2%\",\n      width: \"90%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      style: {\n        margin: \"auto\"\n      },\n      width: 700,\n      height: 700,\n      data: processedData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        dataKey: \"Total Confirmed\",\n        stroke: \"#4099ff\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        dataKey: \"Total Deaths\",\n        stroke: \"#fc032d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        dataKey: \"Total Recovered\",\n        stroke: \"#00C49F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"XUpq7l4RDJK2+3AZ1/cM3qhgogg=\");\n\n_c = LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/graphs/LineGraph.js"],"names":["Paper","React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineGraph","data","processedData","setProcessedData","Object","keys","length","cases","values","sort","deaths","recovered","excerpt","excerpt_obj","i","name","push","margin","marginTop","width","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import { Paper } from \"@material-ui/core\";\n// import {Paper} from \"paper\"\nimport React, { useState, useEffect } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function LineGraph({ data }) {\n  const [processedData, setProcessedData] = useState(null);\n  \n  useEffect(() => {\n    if (Object.keys(data).length > 0) {\n      \n      const keys = Object.keys(data[\"cases\"]);\n      const cases = Object.values(data[\"cases\"]).sort();\n      const deaths = Object.values(data[\"deaths\"]).sort();\n      const recovered = Object.values(data[\"recovered\"]).sort();\n      \n      let excerpt = [];\n      let excerpt_obj = {};\n      \n      for (let i = 0; i < keys.length; i++) {\n        if (i === 0) {\n          excerpt_obj = {\n            \"Total Confirmed\": cases[i],\n            \"Total Deaths\": deaths[i],\n            \"Total Recovered\": recovered[i],\n          };\n        } else {\n          excerpt_obj = {\n            name: keys[i],\n            \"Total Confirmed\": cases[i],\n            \"Total Deaths\": deaths[i],\n            \"Total Recovered\": recovered[i],\n          };\n          excerpt.push(excerpt_obj);\n        }\n      }\n      // const newData = data.map(mapper);\n      setProcessedData(excerpt);\n    }\n  }, [data]);\n  return (\n    <Paper\n      elevation={2}\n      style={{ margin: \"auto\", marginTop: \"2%\", width: \"90%\" }}\n    >\n      <LineChart\n        style={{ margin: \"auto\" }}\n        width={700}\n        height={700}\n        data={processedData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line dataKey=\"Total Confirmed\" stroke=\"#4099ff\" activeDot={{ r: 8 }} />\n        <Line dataKey=\"Total Deaths\" stroke=\"#fc032d\" />\n        <Line dataKey=\"Total Recovered\" stroke=\"#00C49F\" />\n      </LineChart>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}