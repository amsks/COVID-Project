{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/CountryTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\"; // const useStyles = \n\nexport default function CountryTable({\n  data\n}) {\n  _s();\n\n  // Define the Style of the Table\n  const classes = makeStyles({\n    table: {\n      width: 850,\n      margin: \"auto\"\n    },\n    row: {\n      \"&:hover\": {\n        cursor: \"pointer\"\n      }\n    }\n  }); // Get the History from the router DoM\n\n  const history = useHistory(); // Processed Data\n\n  const [processed, setProcessed] = useState(null);\n  useEffect(() => {\n    setProcessed(data);\n  }, [data]);\n\n  const handleSort = async (type, order) => {\n    const key = type.replace(/\\s+/g, \"\");\n    const newData = await processed.sort((a, b) => {\n      if (a[key] > b[key]) {\n        if (order === \"ascending\") {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else {\n        if (order === \"ascending\") {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    });\n    setProcessed(null);\n    setProcessed(newData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    style: {\n      margin: 'auto',\n      marginTop: \"2%\",\n      width: '90%'\n    },\n    children: processed && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        maxHeight: -1\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), [\"New Confirmed\", \"Total Confirmed\", \"New Recovered\", \"Total Recovered\", \"New Deaths\", \"Total Deaths\"].map(el => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [el, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n                onClick: () => handleSort(el, \"descending\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {\n                onClick: () => handleSort(el, \"ascending\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: processed.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            className: classes.row,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              onClick: () => history.push({\n                pathname: `/country`,\n                state: `${row.Country}`,\n                slug: `${row.Slug}`,\n                summary: row\n              }),\n              children: row.Country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.NewConfirmed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.TotalConfirmed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.NewRecovered\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.TotalRecovered\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.NewDeaths\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.TotalDeaths\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, row[\"Country\"], true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryTable, \"bRVkGYFLjEhac0DvTwymenAgXsI=\", false, function () {\n  return [useHistory];\n});\n\n_c = CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/CountryTable.js"],"names":["React","useEffect","useState","useHistory","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","CountryTable","data","classes","table","width","margin","row","cursor","history","processed","setProcessed","handleSort","type","order","key","replace","newData","sort","a","b","marginTop","maxHeight","map","el","push","pathname","state","Country","slug","Slug","summary","NewConfirmed","TotalConfirmed","NewRecovered","TotalRecovered","NewDeaths","TotalDeaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper} from \"@material-ui/core\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\n// const useStyles = \n\nexport default function CountryTable({ data }) {\n  \n  // Define the Style of the Table\n  const classes = makeStyles({\n    table: {\n      width: 850,\n      margin: \"auto\",\n    },\n    row: {\n      \"&:hover\": {\n        cursor: \"pointer\",\n      },\n    },\n  });\n  \n\n  // Get the History from the router DoM\n  const history = useHistory();\n\n  // Processed Data\n  const [processed, setProcessed] = useState(null);\n\n  useEffect(() => {\n    setProcessed(data);\n  }, [data]);\n\n  const handleSort = async (type, order) => {\n    const key = type.replace(/\\s+/g, \"\");\n    const newData = await processed.sort((a, b) => {\n      if (a[key] > b[key]) {\n        if (order === \"ascending\") {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else {\n        if (order === \"ascending\") {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    });\n    setProcessed(null);\n    setProcessed(newData);\n  };\n\n  return (\n    <Paper elevation={2}  style={{ margin:'auto',marginTop: \"2%\" , width:'90%'}} >\n      {processed && (\n        <TableContainer\n          component={Paper}\n          style={{ maxHeight: -1, }}\n        >\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size=\"small\"\n          >\n            <TableHead>\n              <TableRow hover>\n                <TableCell align=\"center\">\n                  Country\n                </TableCell>\n                {[\n                  \"New Confirmed\",\n                  \"Total Confirmed\",\n                  \"New Recovered\",\n                  \"Total Recovered\",\n                  \"New Deaths\",\n                  \"Total Deaths\",\n                ].map((el) => (\n                  <TableCell align=\"center\">\n                    {el}\n                    <br />\n                    <KeyboardArrowDownIcon\n                      onClick={() => handleSort(el, \"descending\")}\n                    />\n                    <KeyboardArrowUpIcon\n                      onClick={() => handleSort(el, \"ascending\")}\n                    />\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {processed.map((row) => (\n                <TableRow key={row[\"Country\"]} hover className={classes.row}>\n                  <TableCell component=\"th\" scope=\"row\" onClick={() => history.push({\n                              pathname: `/country`,\n                              state: `${row.Country}`,\n                              slug: `${row.Slug}`,\n                              summary: row\n                            })}\n                  >\n                    {row.Country}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.NewConfirmed}</TableCell>\n                  <TableCell align=\"left\">{row.TotalConfirmed}</TableCell>\n                  <TableCell align=\"left\">{row.NewRecovered}</TableCell>\n                  <TableCell align=\"left\">{row.TotalRecovered}</TableCell>\n                  <TableCell align=\"left\">{row.NewDeaths}</TableCell>\n                  <TableCell align=\"left\">{row.TotalDeaths}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}