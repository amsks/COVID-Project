{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Country.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Summary from \"../components/Summary\";\nimport PieChartCovid from \"../components/PieChartCovid\";\nimport BarChartCovid from \"../components/BarChartCovid\";\nimport LineChartCovid from \"../components/LineChartCovid\";\nimport firebase from \"firebase\";\nimport LoginNews from \"../components/LoginNews\";\nimport { db } from \"../base\"; // const db = app.firestore()\n\nfunction Country({\n  location\n}) {\n  _s();\n\n  // const [loggedIn, setLoggedIn] = useState(false);\n  const [covidSummary, setCovidSummary] = useState({}); // const [covidWorld, setCovidWorld] = useState([]);\n  // const [lastSevenDays, setLastSevenDays] = useState({});\n\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  const [countryNews, setCountryNews] = useState([]);\n  const history = useHistory();\n  var latestNewsRef = db.collection(\"news\").doc(location.state); // Update Database\n\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n      content: data,\n      date: date\n    }).then(() => {\n      console.log(\"DB updated\");\n    }).catch(error => {\n      console.log(\"error in updating DB\");\n    });\n  }; // Handling User News \n\n\n  useEffect(() => {\n    db.collection(\"userNews\").where(\"country\", \"==\", location.state).get().then(function (querySnapshot) {\n      let newNews = [];\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        newNews.push(doc.data());\n      });\n      setCountryNews(newNews);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []); // Fetching the Country Data \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        latestNewsRef.get().then(async doc => {\n          const today = parseInt(new Date().getTime() / 86400000);\n\n          if (doc.exists) {\n            const date = doc.data().date;\n\n            if (today > date) {\n              const resThirty = await axios.get(`https://corona.lmao.ninja/v3/covid-19/historical/${location.slug}`);\n              setLastThirtyDays(resThirty.data.timeline);\n              updateDB(resThirty.data.timeline, today, location.state);\n            } else {\n              console.log(\"cached from DB\");\n              setLastThirtyDays(doc.data().content);\n            }\n          } else {\n            const resThirty = await axios.get(`https://corona.lmao.ninja/v3/covid-19/historical/${location.slug}`);\n            setLastThirtyDays(resThirty.data.timeline);\n            updateDB(resThirty.data.timeline, today, location.state);\n          }\n        });\n        setCovidSummary(location.summary);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const auth = firebase.auth();\n  const [user, setuser] = useState(auth.currentUser);\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n\n  const signInWithGoogle = () => {\n    auth.signInWithPopup(googleProvider).then(res => {\n      var userRef = db.collection(\"users\").doc(res.user.email);\n      userRef.get().then(async doc => {\n        if (doc.exists) {\n          setuser(res.user);\n        } else {\n          auth.signOut();\n        }\n      });\n      console.log(res.user);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  useEffect(() => {\n    setuser(auth.currentUser);\n  }, [auth.currentUser]); // console.log(lastThirtyDays);\n\n  if (!location.state) {\n    history.push(\"/\");\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Country\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: location.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            height: \"250px\",\n            maxWidth: \"100%\",\n            overflow: \"scroll\",\n            margin: '1% 5%'\n          },\n          children: countryNews.length > 0 ? countryNews.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card align-items-left\",\n            style: {\n              margin: \"1% \",\n              maxWidth: '250px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-header\",\n              children: el.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: el.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-footer\",\n              children: el.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card text-center\",\n            style: {\n              margin: \"1% \",\n              maxWidth: '200px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: \"No News!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), covidSummary && Object.keys(covidSummary).includes(\"Country\") && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Summary, {\n            data: covidSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PieChartCovid, {\n            data: covidSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), lastThirtyDays && Object.keys(lastThirtyDays).includes(\"cases\") && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BarChartCovid, {\n            data: lastThirtyDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LineChartCovid, {\n            data: lastThirtyDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Country, \"szo9hod44V7NhhGK7x8fdk4c7k0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Country;\nCountry.propTypes = {};\nexport default _c2 = withRouter(Country);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Country.js"],"names":["React","useState","useEffect","Fragment","withRouter","axios","Card","CardContent","useHistory","Summary","PieChartCovid","BarChartCovid","LineChartCovid","firebase","LoginNews","db","Country","location","covidSummary","setCovidSummary","lastThirtyDays","setLastThirtyDays","countryNews","setCountryNews","history","latestNewsRef","collection","doc","state","updateDB","data","date","set","content","then","console","log","catch","error","where","get","querySnapshot","newNews","forEach","push","fetchData","today","parseInt","Date","getTime","exists","resThirty","slug","timeline","summary","auth","user","setuser","currentUser","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","res","userRef","email","signOut","message","display","flexDirection","height","maxWidth","overflow","margin","length","map","el","description","Object","keys","includes","propTypes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport Summary from \"../components/Summary\";\nimport PieChartCovid from \"../components/PieChartCovid\";\nimport BarChartCovid from \"../components/BarChartCovid\";\nimport LineChartCovid from \"../components/LineChartCovid\";\nimport firebase from \"firebase\";\nimport LoginNews from \"../components/LoginNews\";\n\nimport {db} from \"../base\"\n\n// const db = app.firestore()\n\nfunction Country({ location }) {\n  // const [loggedIn, setLoggedIn] = useState(false);\n  const [covidSummary, setCovidSummary] = useState({});\n  // const [covidWorld, setCovidWorld] = useState([]);\n  // const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  const [countryNews, setCountryNews] = useState([]);\n\n  const history = useHistory();\n  var latestNewsRef = db.collection(\"news\").doc(location.state);\n\n  // Update Database\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n        content: data,\n        date: date,\n    }).then(() => {\n        console.log(\"DB updated\");\n    }).catch((error) => {\n        console.log(\"error in updating DB\");\n    });\n  };\n\n  // Handling User News \n  useEffect(() => {\n    db.collection(\"userNews\")\n      .where(\"country\", \"==\", location.state).get().then(function (querySnapshot) {\n        let newNews = [];\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          newNews.push(doc.data());\n        });\n        setCountryNews(newNews);\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  }, []);\n\n  // Fetching the Country Data \n  useEffect( () => {\n    \n    const fetchData = async () =>  {\n      try {\n        latestNewsRef.get().then(async (doc) => {\n          const today = parseInt(new Date().getTime() / 86400000);\n          if (doc.exists) {\n            const date = doc.data().date;\n            if (today > date) {\n              const resThirty = await axios.get(\n                `https://corona.lmao.ninja/v3/covid-19/historical/${location.slug}`\n              );\n              setLastThirtyDays(resThirty.data.timeline);\n              updateDB(resThirty.data.timeline, today, location.state);\n            } else {\n              console.log(\"cached from DB\");\n              setLastThirtyDays(doc.data().content);\n            }\n          } else {\n            const resThirty = await axios.get(\n              `https://corona.lmao.ninja/v3/covid-19/historical/${location.slug}`\n            );\n            setLastThirtyDays(resThirty.data.timeline);\n            updateDB(resThirty.data.timeline, today, location.state);\n          }\n        });\n\n        setCovidSummary(location.summary);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData(); \n\n  }, []);\n\n\n  const auth = firebase.auth();\n  const [user, setuser] = useState(auth.currentUser);\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  const signInWithGoogle = () => {\n    auth\n      .signInWithPopup(googleProvider)\n      .then((res) => {\n        var userRef = db.collection(\"users\").doc(res.user.email);\n        userRef.get().then(async (doc) => {\n          if (doc.exists) {\n            setuser(res.user);\n          } else {\n            auth.signOut();          }\n        });\n        console.log(res.user);\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n  useEffect(() => {\n    setuser(auth.currentUser)\n  }, [auth.currentUser])\n  // console.log(lastThirtyDays);\n  if (!location.state){\n    history.push(\"/\");\n  } \n  else {\n    return (\n      <div className=\"Country\">\n        <h1>{location.state}</h1>\n        <Fragment>\n          {/* <div className=\"container\"> */}\n            {/* <div className=\"col-lg-2\"> */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              height: \"250px\",\n              maxWidth: \"100%\",\n              overflow: \"scroll\",\n              margin:'1% 5%'\n            }}\n          >     \n            {countryNews.length > 0 ? (\n              countryNews.map((el) => (\n                <div class=\"card align-items-left\" style={{ margin: \"1% \" ,maxWidth:'250px'}}>\n                  <div class=\"card-header\">\n                    {el.user}\n                  </div>\n                  <div class=\"card-body\">\n                    {el.description}\n                  </div>  \n                    \n                  <div class=\"card-footer\">\n                    {el.date}\n                  </div>  \n                  {/* </div> */}\n                </div>\n              ))\n            ) : (\n              <div class=\"card text-center\" style={{ margin: \"1% \", maxWidth:'200px' }}>\n                <CardContent>No News!</CardContent>\n              </div>\n            )}\n          </div>\n            {covidSummary && Object.keys(covidSummary).includes(\"Country\") && (\n              <Fragment>\n                <Summary data={covidSummary} />\n                <PieChartCovid data={covidSummary} />\n              </Fragment>\n            )}\n            {lastThirtyDays && Object.keys(lastThirtyDays).includes(\"cases\") && (\n              <Fragment>\n                <BarChartCovid data={lastThirtyDays} />\n                <LineChartCovid data={lastThirtyDays} />\n              </Fragment>\n            )}\n          {/* </div> */}\n        </Fragment>\n      </div>\n    );\n  }\n    \n}\n\nCountry.propTypes = {};\n\nexport default withRouter(Country);\n"]},"metadata":{},"sourceType":"module"}