{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/LineChartCovid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nexport default function LineChartCovid({\n  data,\n  length\n}) {\n  _s();\n\n  const [processedData, setProcessedData] = useState(null);\n\n  const mapper = (element, index) => {\n    const dat = new Date();\n    dat.setDate(dat.getDate() - (length - index));\n    return {\n      \"Total Confirmed\": element[\"TotalConfirmed\"],\n      \"Total Deaths\": element[\"TotalDeaths\"],\n      \"Total Recovered\": element[\"TotalRecovered\"],\n      \"name\": dat.toString().slice(4, 10)\n    };\n  };\n\n  useEffect(() => {\n    if (data) {\n      const newData = data.map(mapper);\n      setProcessedData(newData);\n    }\n  }, [data]);\n  console.log(processedData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      style: {\n        margin: \"auto\"\n      },\n      width: 700,\n      height: 700,\n      data: processedData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Total Confirmed\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Total Deaths\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Total Recovered\",\n        stroke: \"#52ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineChartCovid, \"XUpq7l4RDJK2+3AZ1/cM3qhgogg=\");\n\n_c = LineChartCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChartCovid\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/LineChartCovid.js"],"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineChartCovid","data","length","processedData","setProcessedData","mapper","element","index","dat","Date","setDate","getDate","toString","slice","newData","map","console","log","margin","top","right","left","bottom","r"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,QAA6E,UAA7E;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,EAA0C;AAAA;;AACrD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,IAAD,CAAlD;;AACA,QAAMc,MAAM,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACnC,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEAD,IAAAA,GAAG,CAACE,OAAJ,CAAYF,GAAG,CAACG,OAAJ,MAAeT,MAAM,GAACK,KAAtB,CAAZ;AACI,WAAO;AACH,yBAAmBD,OAAO,CAAC,gBAAD,CADvB;AAEH,sBAAgBA,OAAO,CAAC,aAAD,CAFpB;AAGH,yBAAmBA,OAAO,CAAC,gBAAD,CAHvB;AAIH,cAAQE,GAAG,CAACI,QAAJ,GAAeC,KAAf,CAAqB,CAArB,EAAuB,EAAvB;AAJL,KAAP;AAMH,GAVD;;AAYArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,IAAJ,EAAU;AACN,YAAMa,OAAO,GAAGb,IAAI,CAACc,GAAL,CAASV,MAAT,CAAhB;AACAD,MAAAA,gBAAgB,CAACU,OAAD,CAAhB;AACH;AACJ,GALQ,EAKN,CAACb,IAAD,CALM,CAAT;AAMAe,EAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AAEA,sBACI;AAAA,2BACI,QAAC,SAAD;AACA,MAAA,KAAK,EAAE;AAAEe,QAAAA,MAAM,EAAE;AAAV,OADP;AAEA,MAAA,KAAK,EAAE,GAFP;AAGA,MAAA,MAAM,EAAE,GAHR;AAIA,MAAA,IAAI,EAAEf,aAJN;AAKA,MAAA,MAAM,EAAE;AACJgB,QAAAA,GAAG,EAAE,CADD;AAEJC,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,IAAI,EAAE,EAHF;AAIJC,QAAAA,MAAM,EAAE;AAJJ,OALR;AAAA,8BAYA,QAAC,aAAD;AAAe,QAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAZA,eAaA,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAbA,eAcA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAdA,eAeA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAfA,eAgBA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAhBA,eAiBA,QAAC,IAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAC,iBAFZ;AAGI,QAAA,MAAM,EAAC,SAHX;AAII,QAAA,SAAS,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL;AAJf;AAAA;AAAA;AAAA;AAAA,cAjBA,eAuBA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,cAA9B;AAA6C,QAAA,MAAM,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,cAvBA,eAwBA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,iBAA9B;AAAgD,QAAA,MAAM,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GApDuBvB,c;;KAAAA,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from \"recharts\";\n\nexport default function LineChartCovid({ data, length }) {\n    const [processedData, setProcessedData] = useState(null);\n    const mapper = (element, index) => {\n    const dat = new Date();\n    \n    dat.setDate(dat.getDate()-(length-index))\n        return {\n            \"Total Confirmed\": element[\"TotalConfirmed\"],\n            \"Total Deaths\": element[\"TotalDeaths\"],\n            \"Total Recovered\": element[\"TotalRecovered\"],\n            \"name\": dat.toString().slice(4,10)\n        };\n    };\n\n    useEffect(() => {\n        if (data) {\n            const newData = data.map(mapper);\n            setProcessedData(newData);\n        }\n    }, [data]);\n    console.log(processedData);\n\n    return (\n        <div>\n            <LineChart\n            style={{ margin: \"auto\" }}\n            width={700}\n            height={700}\n            data={processedData}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n            >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line\n                type=\"monotone\"\n                dataKey=\"Total Confirmed\"\n                stroke=\"#8884d8\"\n                activeDot={{ r: 8 }}\n            />\n            <Line type=\"monotone\" dataKey=\"Total Deaths\" stroke=\"#82ca9d\" />\n            <Line type=\"monotone\" dataKey=\"Total Recovered\" stroke=\"#52ca9d\" />\n            </LineChart>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}