{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Country.js\",\n    _s = $RefreshSig$();\n\n// NPM Component Imports\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; // Custom component Imports\n\nimport SummaryTable from \"../tables/SummaryTable\";\nimport PieGraph from \"../graphs/PieGraph\";\nimport BarGraph from \"../graphs/BarGraph\";\nimport LineGraph from \"../graphs/LineGraph\";\nimport LoginNews from \"../components/LoginNews\"; //firebase Imports\n\nimport { db } from \"../base\";\n\nfunction Country({\n  location\n}) {\n  _s();\n\n  const [summary, setSummary] = useState({});\n  const [month, setMonth] = useState({});\n  const [countryNews, setCountryNews] = useState([]);\n  const history = useHistory(); // Update Database\n\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n      content: data,\n      date: date\n    }).then(() => {\n      console.log(\"DB updated\");\n    }).catch(error => {\n      console.log(\"error in updating DB\");\n    });\n  }; // Handling User News \n\n\n  useEffect(() => {\n    db.collection(\"userNews\").where(\"country\", \"==\", location.state).get().then(function (querySnapshot) {\n      let newNews = [];\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        newNews.push(doc.data());\n      });\n      setCountryNews(newNews);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []); // Fetching the Country Data \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const monthUrl = `https://corona.lmao.ninja/v3/covid-19/historical/${location.slug}`;\n        db.collection(\"news\").doc(location.state).get().then(async doc => {\n          const today = parseInt(new Date().getTime() / 86400000);\n\n          if (doc.exists) {\n            const date = doc.data().date;\n\n            if (today > date) {\n              const monat = await axios.get(monthUrl);\n              setMonth(monat.data.timeline);\n              updateDB(monat.data.timeline, today, location.state);\n            } else {\n              console.log(\"cached from DB\");\n              setMonth(doc.data().content);\n            }\n          } else {\n            const monat = await axios.get(monthUrl);\n            setMonth(monat.data.timeline);\n            updateDB(monat.data.timeline, today, location.state);\n          }\n        });\n        setSummary(location.summary);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (!location.state) {\n    history.push(\"/\");\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Country\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: location.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LoginNews, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            height: \"250px\",\n            maxWidth: \"100%\",\n            overflow: \"scroll\",\n            margin: '1% 5%'\n          },\n          children: countryNews.length > 0 ? countryNews.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card align-items-left\",\n            style: {\n              margin: \"1% \",\n              maxWidth: '250px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-header\",\n              children: el.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: el.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-footer\",\n              children: el.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card text-center\",\n            style: {\n              margin: \"1% \",\n              maxWidth: '200px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: \"No News Yet!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), summary && Object.keys(summary).includes(\"Country\") && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SummaryTable, {\n            data: summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PieGraph, {\n            data: summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), month && Object.keys(month).includes(\"cases\") && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BarGraph, {\n            data: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            data: month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Country, \"+v4hosAChAiTulLhT9yVHQbqdVQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Country;\nCountry.propTypes = {};\nexport default _c2 = withRouter(Country);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Country.js"],"names":["React","useState","useEffect","Fragment","withRouter","axios","useHistory","SummaryTable","PieGraph","BarGraph","LineGraph","LoginNews","db","Country","location","summary","setSummary","month","setMonth","countryNews","setCountryNews","history","updateDB","data","date","doc","collection","set","content","then","console","log","catch","error","where","state","get","querySnapshot","newNews","forEach","push","fetchData","monthUrl","slug","today","parseInt","Date","getTime","exists","monat","timeline","display","flexDirection","height","maxWidth","overflow","margin","length","map","el","user","description","Object","keys","includes","propTypes"],"mappings":"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","sourcesContent":["// NPM Component Imports\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\n// Custom component Imports\nimport SummaryTable from \"../tables/SummaryTable\";\nimport PieGraph from \"../graphs/PieGraph\";\nimport BarGraph from \"../graphs/BarGraph\";\nimport LineGraph from \"../graphs/LineGraph\";\nimport LoginNews from \"../components/LoginNews\";\n\n//firebase Imports\nimport {db} from \"../base\"\n\nfunction Country({ location }) {\n\n  const [summary, setSummary] = useState({});\n  const [month, setMonth] = useState({});\n  const [countryNews, setCountryNews] = useState([]);\n\n  const history = useHistory();\n\n  // Update Database\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n        content: data,\n        date: date,\n    }).then(() => {\n        console.log(\"DB updated\");\n    }).catch((error) => {\n        console.log(\"error in updating DB\");\n    });\n  };\n\n  // Handling User News \n  useEffect(() => {\n    db.collection(\"userNews\")\n      .where(\"country\", \"==\", location.state).get().then(function (querySnapshot) {\n        let newNews = [];\n        querySnapshot.forEach(function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          newNews.push(doc.data());\n        });\n        setCountryNews(newNews);\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  }, []);\n\n  // Fetching the Country Data \n  useEffect( () => {\n    \n    const fetchData = async () =>  {\n      try {\n        \n        const monthUrl = `https://corona.lmao.ninja/v3/covid-19/historical/${location.slug}`;\n        \n        db.collection(\"news\").doc(location.state).get().then(async (doc) => {\n          const today = parseInt(new Date().getTime() / 86400000);\n          if (doc.exists) {\n            const date = doc.data().date;\n            if (today > date) {\n              const monat = await axios.get(monthUrl);\n              setMonth(monat.data.timeline);\n              updateDB(monat.data.timeline, today, location.state);\n            } else {\n              console.log(\"cached from DB\");\n              setMonth(doc.data().content);\n            }\n          } else {\n            const monat = await axios.get(monthUrl);\n            setMonth(monat.data.timeline);\n            updateDB(monat.data.timeline, today, location.state);\n          }\n        });\n\n        setSummary(location.summary);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData(); \n\n  }, []);\n\n  if (!location.state){\n    history.push(\"/\");\n  } \n  else {\n    return (\n      <div className=\"Country\">\n        <h1>{location.state}</h1>\n        <Fragment>\n          <LoginNews />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              height: \"250px\",\n              maxWidth: \"100%\",\n              overflow: \"scroll\",\n              margin:'1% 5%'\n            }}\n          >     \n            {countryNews.length > 0 ? (\n              countryNews.map((el) => (\n                <div class=\"card align-items-left\" style={{ margin: \"1% \" ,maxWidth:'250px'}}>\n                  <div class=\"card-header\">\n                    {el.user}\n                  </div>\n                  <div class=\"card-body\">\n                    {el.description}\n                  </div>  \n                    \n                  <div class=\"card-footer\">\n                    {el.date}\n                  </div>  \n                  {/* </div> */}\n                </div>\n              ))\n            ) : (\n              <div class=\"card text-center\" style={{ margin: \"1% \", maxWidth:'200px' }}>\n                <div class=\"card-body\">\n                  No News Yet!\n                </div>  \n              </div>\n            )}\n          </div>\n            {summary && Object.keys(summary).includes(\"Country\") && (\n              <Fragment>\n                <SummaryTable data={summary} />\n                <PieGraph data={summary} />\n              </Fragment>\n            )}\n            {month && Object.keys(month).includes(\"cases\") && (\n              <Fragment>\n                <BarGraph data={month} />\n                <LineGraph data={month} />\n              </Fragment>\n            )}\n          {/* </div> */}\n        </Fragment>\n      </div>\n    );\n  }\n    \n}\n\nCountry.propTypes = {};\n\nexport default withRouter(Country);\n"]},"metadata":{},"sourceType":"module"}