{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/PieChartCovid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { RadialChart } from \"react-vis\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\nexport default function PieChartCovid({\n  data\n}) {\n  _s();\n\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n  const RADIAN = Math.PI / 180;\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: \"end\",\n      dominantBaseline: \"central\",\n      children: `${(percent * 100).toFixed(0)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this);\n  };\n\n  const [processedData, setProcessedData] = useState(null);\n  useEffect(() => {\n    if (data) {\n      setProcessedData([{\n        name: \"Active\",\n        value: data[\"TotalConfirmed\"] - data[\"TotalRecovered\"]\n      }, {\n        name: \"Recovered\",\n        value: data[\"TotalRecovered\"]\n      }, {\n        name: \"Death\",\n        value: data[\"TotalDeaths\"]\n      }]);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: processedData && /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 400,\n      style: {\n        margin: \"auto\",\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        dataKey: \"value\",\n        nameKey: \"name\",\n        legendType: \"circle\",\n        data: processedData,\n        cx: 200,\n        cy: 200,\n        outerRadius: 150,\n        innerRadius: 50,\n        fill: \"#8884d8\",\n        label: renderCustomizedLabel,\n        labelLine: false,\n        children: processedData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        iconSize: 10,\n        width: 120,\n        height: 140,\n        layout: \"vertical\",\n        verticalAlign: \"middle\",\n        wrapperStyle: {\n          top: 0,\n          left: 350,\n          lineHeight: \"24px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PieChartCovid, \"XUpq7l4RDJK2+3AZ1/cM3qhgogg=\");\n\n_c = PieChartCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChartCovid\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/components/PieChartCovid.js"],"names":["React","useEffect","useState","RadialChart","PieChart","Pie","Cell","Tooltip","Legend","PieChartCovid","data","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","processedData","setProcessedData","name","value","margin","marginTop","map","entry","length","top","left","lineHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RadialChart } from \"react-vis\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\n\nexport default function PieChartCovid({ data }) {\n    const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n            cx,\n            cy,\n            midAngle,\n            innerRadius,\n            outerRadius,\n            percent,\n            index,\n        }) => {\n            const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n            const x = cx + radius * Math.cos(-midAngle * RADIAN);\n            const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n            return (\n                <text\n                x={x}\n                y={y}\n                fill=\"white\"\n                textAnchor={\"end\"}\n                dominantBaseline=\"central\"\n                >\n                {`${(percent * 100).toFixed(0)}%`}\n                </text>\n            );\n        };\n\n    const [processedData, setProcessedData] = useState(null);\n\n    useEffect(() => {\n        if (data) {\n            setProcessedData([\n            {\n                name: \"Active\",\n                value: data[\"TotalConfirmed\"] - data[\"TotalRecovered\"],\n            },\n            {\n                name: \"Recovered\",\n                value: data[\"TotalRecovered\"],\n            },\n            {\n                name: \"Death\",\n                value: data[\"TotalDeaths\"],\n            },\n            ]);\n        }\n    }, [data]);\n\n    return (\n        <div>\n            {processedData && (\n            <PieChart width={400} height={400} style={{ margin: \"auto\", marginTop:'30px' }}>\n                <Pie\n                dataKey=\"value\"\n                nameKey=\"name\"\n                legendType=\"circle\"\n                data={processedData}\n                cx={200}\n                cy={200}\n                outerRadius={150}\n                innerRadius={50}\n                fill=\"#8884d8\"\n                label={renderCustomizedLabel}\n                labelLine={false}\n                >\n                {processedData.map((entry, index) => (\n                    <Cell fill={COLORS[index % COLORS.length]} />\n                ))}\n                </Pie>\n                <Legend\n                iconSize={10}\n                width={120}\n                height={140}\n                layout=\"vertical\"\n                verticalAlign=\"middle\"\n                wrapperStyle={{\n                    top: 0,\n                    left: 350,\n                    lineHeight: \"24px\",\n                }}\n                />\n                <Tooltip />\n            </PieChart>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}