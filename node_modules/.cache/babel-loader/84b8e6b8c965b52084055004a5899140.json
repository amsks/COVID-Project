{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\n// General Imports \nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Card, CardContent } from \"@material-ui/core\"; // Import the Custom Components\n\nimport Summary from \"../components/Summary\";\nimport PieChartCovid from \"../components/PieChartCovid\";\nimport BarChartCovid from \"../components/BarChartCovid\";\nimport LineChartCovid from \"../components/LineChartCovid\";\nimport CountryTable from \"../components/CountryTable\";\nimport Appbar from \"../components/Appbar\";\nimport firebase from \"firebase\"; //firebase Imports\n\nimport { app } from \"../base\";\nconst db = app.firestore();\n\nfunction HomePage({\n  history\n}) {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [covidSummary, setCovidSummary] = useState({});\n  const [covidWorld, setCovidWorld] = useState([]);\n  const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  const [countryNews, setCountryNews] = useState([]); // Global News as a firebase collection \n\n  var latestNewsRef = db.collection(\"news\").doc(\"global\"); // Updating the news collection\n\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n      content: data,\n      date: date\n    }).then(() => {\n      console.log(\"DB updated\");\n    }).catch(error => {\n      console.log(\"error in updating DB\");\n    });\n  }; // Run UseEffect once to get the data through the api call\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const summaryUrl = \"https://api.covid19api.com/summary\";\n      const lastSevenDaysUrl = \"https://corona.lmao.ninja/v2/historical/all?lastdays=8\";\n      const lastThirtyDaysUrl = \"https://corona.lmao.ninja/v2/historical/all\";\n\n      try {\n        latestNewsRef.get().then(async doc => {\n          const today = parseInt(new Date().getTime() / 86400000);\n\n          if (doc.exists) {\n            const date = doc.data().date;\n\n            if (today > date) {\n              const resSummary = await axios.get(summaryUrl);\n              setCovidSummary(resSummary.data);\n              updateDB(resSummary.data, today, \"global\");\n            } else {\n              console.log(\"cached from DB\");\n              setCovidSummary(doc.data().content);\n            }\n          } else {\n            const resSummary = await axios.get(summaryUrl);\n            setCovidSummary(resSummary.data);\n            updateDB(resSummary.data, today, \"global\");\n          }\n        });\n        const resSeven = await axios.get(lastSevenDaysUrl);\n        setLastSevenDays(resSeven.data);\n        const resThirty = await axios.get(lastThirtyDaysUrl);\n        setLastThirtyDays(resThirty.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []); // Handling user news\n\n  useEffect(() => {\n    db.collection(\"userNews\").where(\"country\", \"==\", \"worldwide\").get().then(function (querySnapshot) {\n      let newNews = [];\n      querySnapshot.forEach(function (doc) {\n        newNews.push(doc.data());\n      });\n      setCountryNews(newNews);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Worldwide Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Appbar, {\n        heading: \"WorldWide Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: countryNews.length > 0 ? countryNews.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card text-center\",\n          style: {\n            margin: \"1% \",\n            maxWidth: '200px',\n            overflow: 'scroll'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [\"User: \", el.user, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), \"Date: \", el.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this), \"Description: \", el.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card text-center\",\n          style: {\n            margin: \"1% \",\n            maxWidth: '200px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: \"No News!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), Object.keys(covidSummary).includes(\"Global\") && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Summary, {\n          data: covidSummary[\"Global\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PieChartCovid, {\n          data: covidSummary[\"Global\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), lastSevenDays && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BarChartCovid, {\n          data: lastSevenDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LineChartCovid, {\n          data: lastThirtyDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), Object.keys(covidSummary).includes(\"Global\") &&\n      /*#__PURE__*/\n      // <Fragment>\n      _jsxDEV(CountryTable, {\n        data: covidSummary[\"Countries\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }, this) // </Fragment>\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"ORi3Z5GNzwpgtMTpYN4AvCWIbMo=\");\n\n_c = HomePage;\nHomePage.propTypes = {};\nexport default _c2 = withRouter(HomePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/mclovin/git/Clouds-Projects/react/covid_project/src/pages/Home.js"],"names":["React","useState","useEffect","Fragment","withRouter","axios","Card","CardContent","Summary","PieChartCovid","BarChartCovid","LineChartCovid","CountryTable","Appbar","firebase","app","db","firestore","HomePage","history","loggedIn","setLoggedIn","covidSummary","setCovidSummary","covidWorld","setCovidWorld","lastSevenDays","setLastSevenDays","lastThirtyDays","setLastThirtyDays","countryNews","setCountryNews","latestNewsRef","collection","doc","updateDB","data","date","set","content","then","console","log","catch","error","fetchData","summaryUrl","lastSevenDaysUrl","lastThirtyDaysUrl","get","today","parseInt","Date","getTime","exists","resSummary","resSeven","resThirty","where","querySnapshot","newNews","forEach","push","length","map","el","margin","maxWidth","overflow","user","description","Object","keys","includes","propTypes"],"mappings":"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","sourcesContent":["// General Imports \nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\n\n// Import the Custom Components\nimport Summary from \"../components/Summary\";\nimport PieChartCovid from \"../components/PieChartCovid\";\nimport BarChartCovid from \"../components/BarChartCovid\";\nimport LineChartCovid from \"../components/LineChartCovid\";\nimport CountryTable from \"../components/CountryTable\";\nimport Appbar from \"../components/Appbar\";\n\nimport firebase from \"firebase\";\n\n//firebase Imports\nimport {app} from \"../base\"\n\nconst db = app.firestore();\n\nfunction HomePage({ history }) {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [covidSummary, setCovidSummary] = useState({});\n  const [covidWorld, setCovidWorld] = useState([]);\n  const [lastSevenDays, setLastSevenDays] = useState({});\n  const [lastThirtyDays, setLastThirtyDays] = useState({});\n  const [countryNews, setCountryNews] = useState([]);\n  \n  // Global News as a firebase collection \n  var latestNewsRef = db.collection(\"news\").doc(\"global\");\n\n  // Updating the news collection\n  const updateDB = (data, date, doc) => {\n    db.collection(\"news\").doc(doc).set({\n        content: data,\n        date: date,\n      }).then(() => {\n        console.log(\"DB updated\");\n      })\n      .catch((error) => {\n        console.log(\"error in updating DB\");\n      });\n  };  \n\n  // Run UseEffect once to get the data through the api call\n  useEffect( () => {\n\n    const fetchData = async () => {\n      const summaryUrl = \"https://api.covid19api.com/summary\" ;\n      const lastSevenDaysUrl = \"https://corona.lmao.ninja/v2/historical/all?lastdays=8\" ; \n      const lastThirtyDaysUrl = \"https://corona.lmao.ninja/v2/historical/all\" ; \n\n      try {\n        latestNewsRef.get().then(async (doc) => {\n          const today = parseInt(new Date().getTime() / 86400000);\n          if (doc.exists) {\n            const date = doc.data().date;\n            if (today > date) {\n              const resSummary = await axios.get(summaryUrl);\n              setCovidSummary(resSummary.data);\n              updateDB(resSummary.data, today, \"global\");\n            } else {\n              console.log(\"cached from DB\");\n              setCovidSummary(doc.data().content);\n            }\n          } \n          else {\n            const resSummary = await axios.get(summaryUrl);\n            setCovidSummary(resSummary.data);\n            updateDB(resSummary.data, today, \"global\");\n          }\n        });\n\n        const resSeven = await axios.get(lastSevenDaysUrl);\n        setLastSevenDays(resSeven.data);\n        const resThirty = await axios.get(lastThirtyDaysUrl);\n        setLastThirtyDays(resThirty.data);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n\n    \n  }, []);\n\n  // Handling user news\n  useEffect(() => {\n    db.collection(\"userNews\")\n      .where(\"country\", \"==\", \"worldwide\")\n      .get()\n      .then(function (querySnapshot) {\n        let newNews = [];\n        querySnapshot.forEach(function (doc) {\n          newNews.push(doc.data());\n        });\n        setCountryNews(newNews);\n      })\n      .catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  }, []);\n\n  \n  return (\n    <div className=\"home\">\n      <h1>Worldwide Data</h1>\n      <Fragment>\n        <Appbar heading=\"WorldWide Data\"/>\n          <div class=\"container\">\n            {countryNews.length > 0 ? (\n              countryNews.map((el) => (\n                <div class=\"card text-center\" style={{ margin: \"1% \" ,maxWidth:'200px', overflow:'scroll'}}>\n                  <CardContent>\n                    User: {el.user}\n                    <br />\n                    Date: {el.date}\n                    <br />\n                    Description: {el.description}\n                  </CardContent>\n                </div>\n              ))\n            ) : (\n              <div class=\"card text-center\" style={{ margin: \"1% \", maxWidth:'200px' }}>\n                <CardContent>No News!</CardContent>\n              </div>\n            )}\n          </div>\n      {/* </div> */}\n          {Object.keys(covidSummary).includes(\"Global\") && (\n            <Fragment>\n              <Summary data={covidSummary[\"Global\"]} />\n              <PieChartCovid data={covidSummary[\"Global\"]} />\n            </Fragment>\n          )}\n          {lastSevenDays && (\n            <Fragment>\n              <BarChartCovid data={lastSevenDays} />\n              <LineChartCovid data={lastThirtyDays} />\n            </Fragment>\n          )}\n          {Object.keys(covidSummary).includes(\"Global\") && (\n            // <Fragment>\n              <CountryTable data={covidSummary[\"Countries\"]} />\n            // </Fragment>\n          )}\n        {/* </div> */}\n      </Fragment>\n      <br/>\n      <br/>\n      {/* </div> */}\n    </div>\n  );\n}\n\nHomePage.propTypes = {};\n\nexport default withRouter(HomePage);\n"]},"metadata":{},"sourceType":"module"}